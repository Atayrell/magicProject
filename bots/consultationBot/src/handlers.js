const fs = require("fs");
const { getExpertsKeyboard, getExpertOptionsKeyboard } = require("./keyboard");
const { experts } = require("./config");
const messages = require("./messages");

const setupHandlers = (bot) => {
  bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const placeholderPhoto = fs.createReadStream(
      "../assets/img/dmitryPhoto.jpg"
    );
    await bot.sendPhoto(chatId, placeholderPhoto, {
      caption: messages.startMessage,
      reply_markup: getExpertsKeyboard(),
    });
  });

  bot.on("callback_query", async (query) => {
    const chatId = query.message.chat.id;
    const messageId = query.message.message_id;
    const data = query.data;

    if (data.startsWith("expert_")) {
      const expertKey = data.split("_")[1];
      const expert = experts[expertKey];

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —ç–∫—Å–ø–µ—Ä—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ–º file_id
      const sentPhotoMsg = await bot.sendPhoto(
        chatId,
        fs.createReadStream(expert.photo)
      );
      const fileId = sentPhotoMsg.photo[0].file_id;

      // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–ª–æ—Å—å
      await bot.deleteMessage(chatId, sentPhotoMsg.message_id);

      // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –º–µ–¥–∏–∞ —Å –ø–æ—Ç–æ–∫–æ–º —Ñ–∞–π–ª–∞ –≤–º–µ—Å—Ç–æ —Å—Ç—Ä–æ–∫–∏ –ø—É—Ç–∏
      const media = {
        type: "photo",
        media: fileId,
        caption: `–í—ã –≤—ã–±—Ä–∞–ª–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞ *${expert.name}*.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:`,
        parse_mode: "Markdown",
      };

      await bot.editMessageMedia(media, {
        chat_id: chatId,
        message_id: messageId,
        reply_markup: getExpertOptionsKeyboard(expertKey),
      });
    } else if (data.startsWith("cost_")) {
      const expertKey = data.split("_")[1];
      bot.editMessageCaption(`üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: \n${experts[expertKey].cost}`, {
        chat_id: chatId,
        message_id: messageId,
        reply_markup: getExpertOptionsKeyboard(expertKey),
      });
    } else if (data.startsWith("desc_")) {
      const expertKey = data.split("_")[1];
      bot.editMessageCaption(`‚ÑπÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: ${experts[expertKey].description}`, {
        chat_id: chatId,
        message_id: messageId,
        reply_markup: getExpertOptionsKeyboard(expertKey),
      });
    } else if (data.startsWith("site_")) {
      const expertKey = data.split("_")[1];
      bot.editMessageCaption(`üîó –°–∞–π—Ç: ${experts[expertKey].website}`, {
        chat_id: chatId,
        message_id: messageId,
        reply_markup: getExpertOptionsKeyboard(expertKey),
      });
    } else if (data === "back") {
      bot.editMessageCaption(messages.selectExpert, {
        chat_id: chatId,
        message_id: messageId,
        reply_markup: getExpertsKeyboard(),
      });
    }

    bot.answerCallbackQuery(query.id);
  });
};

module.exports = { setupHandlers };
